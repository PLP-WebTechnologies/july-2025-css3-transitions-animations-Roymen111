project structure
index.html
styles.css
script.js

 index.html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Interactive CSS + JavaScript Page</title>
  <link rel="stylesheet" href="styles.css">
</head>
<body>
  <h1> Bringing Web Pages to Life</h1>

  <!-- Part 1: CSS Transitions & Animations -->
  <section>
    <h2> CSS Transitions & Animations</h2>
    <button class="hover-btn">Hover Me</button>
    <div class="animated-box"></div>
  </section>

  <!-- Part 2: JavaScript Functions -->
  <section>
    <h2>  JavaScript Functions (Scope, Parameters & Return)</h2>
    <button onclick="calculateSquare(5)">Calculate Square of 5</button>
    <p id="squareResult"></p>
  </section>

  <!-- Part 3: Combining CSS & JavaScript -->
  <section>
    <h2>  Combining CSS Animations + JS</h2>
    <button id="animateBtn">Animate Box</button>
    <div id="jsBox" class="box"></div>
  </section>

  <script src="script.js"></script>
</body>
</html>

 styles.css
/* ---------- Part 1: Transitions & Animations ---------- */

/* Button hover effect */
.hover-btn {
  padding: 10px 20px;
  font-size: 16px;
  border: none;
  background: royalblue;
  color: white;
  cursor: pointer;
  transition: background-color 0.5s ease, transform 0.3s ease;
}

.hover-btn:hover {
  background-color: darkorange;
  transform: scale(1.1);
}

/* Continuous animation using keyframes */
.animated-box {
  width: 100px;
  height: 100px;
  background: crimson;
  margin-top: 20px;
  animation: pulse 2s infinite;
}

@keyframes pulse {
  0%   { transform: scale(1); opacity: 1; }
  50%  { transform: scale(1.2); opacity: 0.6; }
  100% { transform: scale(1); opacity: 1; }
}

/* ---------- Part 3: JS + CSS ---------- */
.box {
  width: 100px;
  height: 100px;
  background: seagreen;
  margin-top: 20px;
  transition: transform 1s ease, background 1s ease;
}

/* Class that triggers animation */
.animate {
  transform: rotate(360deg) scale(1.2);
  background: gold;
}

âš¡ script.js
/* ---------- Part 2: Functions (Scope, Parameters & Return) ---------- */

// Example of global variable
let globalMessage = "This is a global message.";

function calculateSquare(num) {
  // local scope variable
  let result = num * num;  

  // return value
  document.getElementById("squareResult").textContent =
    `Square of ${num} is ${result}.`;

  return result; // function returns a value for reuse
}

/* ---------- Part 3: Combining CSS + JS ---------- */

const animateBtn = document.getElementById("animateBtn");
const jsBox = document.getElementById("jsBox");

// Toggle animation on button click
animateBtn.addEventListener("click", function() {
  jsBox.classList.toggle("animate");
});
